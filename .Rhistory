setwd("~/Documents/GitHub/Risk-Analytics-Project")
data <- load("niveau.Rdata")
View(niveau)
View(niveau)
# Import dataset
niveau <- load("niveau.Rdata")
typeof(niveau)
niveau <- load("niveau.Rdata")
str(niveau)
# Read in the data
load("niveau.Rdata")
str(niveau)
library(tibble)
library(tsibble)
# Transform into tsibble
niveau <- as_tsibble(niveau, index = niveau[8])
# Transform into tsibble
niveau <- as_tsibble(niveau, index = niveau$Zeitpunkt_des_Auftretens)
# Transform into tsibble
niveau <- as_tsibble(niveau)
# Read in the data
load(file = here::here("niveau.Rdata"))
niveau$Zeitpunkt_des_Auftretens
typeof(niveau$Zeitpunkt_des_Auftretens)
# Convert column 8 into date type
niveau$Zeitpunkt_des_Auftretens <- as.Date(niveau$Zeitpunkt_des_Auftretens)
typeof(niveau$Zeitpunkt_des_Auftretens)
library(lubridate)
library(tibble)
library(tsibble)
# Convert column 8 into date type
niveau$Zeitpunkt_des_Auftretens <- as.POSIXct(niveau$Zeitpunkt_des_Auftretens)
View(niveau)
niveau$Zeitpunkt_des_Auftretens[1]
# Transform into tsibble
niveau <- as_tsibble(niveau, index = niveau$Zeitpunkt_des_Auftretens)
# Transform into tsibble
niveau <- as_tibble(niveau, index = niveau$Zeitpunkt_des_Auftretens)
niveau <- as_tibble(niveau)
niveau <- as_tsibble(niveau, index = niveau$Zeitpunkt_des_Auftretens)
class(niveau$Zeitpunkt_des_Auftretens)
niveau <- as_tsibble(niveau,
key = niveau$Stationsname,
index = niveau$Zeitpunkt_des_Auftretens)
niveau <- as_tsibble(niveau,
key = niveau$Stationsnummer,
index = niveau$Zeitpunkt_des_Auftretens)
str(niveau)
niveau <- as_tsibble(index = `Zeitpunkt_des_Auftretens`,
key = Stationsnummer)
niveau <- as_tsibble(index = niveau$Zeitpunkt_des_Auftretens,
key = niveau$Stationsname)
niveau <- as_tsibble(niveau,
index = niveau$Zeitpunkt_des_Auftretens,
key = niveau$Stationsname)
niveau <- as_tsibble(niveau,
index = niveau$Zeitpunkt_des_Auftretens,
key = c(niveau$Stationsname, niveau$Stationsname))
niveau.tb <- tibble(date = as.POSIXct(niveau$Zeitpunkt_des_Auftretens),
value = niveau$Zeitpunkt_des_Auftretens)
View(niveau.tb)
# Convert column 8 into date type
niveau$Zeitpunkt_des_Auftretens <- as.POSIXct(niveau$Zeitpunkt_des_Auftretens)
# Transform into tibble
niveau.tb <- as_tibble(niveau)
niveau.ts <- as_tsibble(niveau.tb)
niveau.ts <- as_tsibble(niveau.tb)
niveau.ts <- as_tsibble(niveau.tb,
key = niveau.tb$Stationsname,
index = c(niveau.tb$Zeitstempel,
niveau.tb$Zeitpunkt_des_Auftretens))
niveau.ts <- as_tsibble(niveau.tb,
key = c(niveau.tb$Stationsname,niveau.tb$Wert),
index = c(niveau.tb$Zeitpunkt_des_Auftretens))
niveau.ts <- niveau.tb %>% mutate(date = make_datetime(year, month, day, hour))
library(dplyr)
niveau.ts <- niveau.tb %>% mutate(date = make_datetime(year, month, day, hour))
str(niveau.tb$Zeitpunkt_des_Auftretens)
# Transform into tibble
niveau.tb <- as_tsibble(niveau.tb)
# Transform into tibble
niveau.tb <- as_tsibble(niveau.tb,
key = c(niveau.tb$Stationsname, niveau.tb$Zeitstempel, niveau.tb$Wert),
index = niveau.tb$Zeitpunkt_des_Auftretens)
niveau.tb <- as_tsibble(niveau.tb,
index = niveau.tb$Zeitpunkt_des_Auftretens)
niveau$Zeitpunkt_des_Auftretens <- niveau %>%
mutate(niveau$Zeitpunkt_des_Auftretens = make_datetime(year, month, day,hour))
# Convert column 8 into date type
niveau$Zeitpunkt_des_Auftretens <- niveau %>%
mutate(niveau$Zeitpunkt_des_Auftretens = make_datetime(year, month, day,hour))
# Convert column 8 into date type
niveau<- niveau %>% mutate(niveau$Zeitpunkt_des_Auftretens = make_datetime(year, month, day,hour))
niveau <- niveau %>%
mutate(Zeitpunkt_des_Auftretens = as_datetime(Zeitpunkt_des_Auftretens))
library(lubridate)
library(tibble)
library(tsibble)
# Convert column 8 into date type
niveau <- niveau %>%
mutate(Zeitpunkt_des_Auftretens = as_datetime(Zeitpunkt_des_Auftretens))
#niveau$Zeitpunkt_des_Auftretens[1]
# Transform into tibble
niveau.tb <- niveau %>%
as_tsibble(index = Zeitpunkt_des_Auftretens,
key = Zeitstempel)
# Transform into tibble
niveau.ts <- niveau %>%
as_tsibble(index = Zeitpunkt_des_Auftretens,
key = Zeitstempel)
str(niveau.ts)
View(niveau.ts)
# Transform into tibble
niveau.ts <- niveau %>%
as_tsibble(index = Zeitsempel,
key = Zeitpunkt_des_Auftretens)
niveau.ts <- niveau %>%
as_tsibble(index = Zeitstempel,
key = Zeitpunkt_des_Auftretens)
library(fpp3)
niveau.ts <- niveau %>%
as_tsibble(index = Zeitpunkt_des_Auftretens,
key = Zeitstempel)
View(niveau.ts)
load(file = here::here("niveau.Rdata"))
library(lubridate)
library(tibble)
library(tsibble
library(dplyr)
# Convert column 8 into date type
niveau<- niveau %>% mutate(niveau$Zeitpunkt_des_Auftretens = make_datetime(year, month, day,hour))
#niveau$Zeitpunkt_des_Auftretens[1]
# Transform into tibble
niveau.tb <- as_tsibble(niveau.tb,
index = niveau.tb$Zeitpunkt_des_Auftretens)
load(file = here::here("niveau.Rdata"))
# Convert column 8 into date type
niveau <- niveau %>%
mutate(Zeitpunkt_des_Auftretens = as_datetime(Zeitpunkt_des_Auftretens))
#niveau$Zeitpunkt_des_Auftretens[1]
# Transform into tibble
niveau.ts <- niveau %>%
as_tsibble(index = Zeitpunkt_des_Auftretens,
key = Zeitstempel)
View(niveau.ts)
niveau.ts %>% autoplot()
niveau.ts %>% autoplot(Wert)
niveau.ts %>%
ggplot() +
geom_line(mapping = aes(x = Zeitpunkt_des_Auftretens,
y = Wert))
# Plot the time series
niveau.ts %>%
ggplot() +
geom_line(mapping = aes(x = Zeitpunkt_des_Auftretens,
y = Wert)) +
labs(title = "Time Series: Water Levels",
x = "Time of Occurrence",
y = "Value")
# Histogram
niveau.ts %>%
ggplot() +
geom_histogram(mapping = aes(x = Wert),
stat = "identity") +
labs(title = "Water Levels Frequencies",
x = "Value",
y = "Frequency")
# Histogram
niveau.ts %>%
ggplot() +
geom_histogram(mapping = aes(x = Zeitpunkt_des_Auftretens,
y = Wert),
stat = "identity") +
labs(title = "Water Levels Frequencies",
x = "Value",
y = "Frequency")
# Histogram
niveau.ts %>%
ggplot() +
geom_histogram(mapping = aes(x = Zeitpunkt_des_Auftretens,
y = frequency),
stat = "count") +
labs(title = "Water Levels Frequencies",
x = "Value",
y = "Frequency")
# Histogram
niveau.ts %>%
ggplot() +
geom_histogram(mapping = aes(Wert),
stat = "count") +
labs(title = "Water Levels Frequencies",
x = "Value",
y = "Frequency")
# Histogram
niveau.ts %>%
ggplot() +
geom_histogram(mapping = aes(Wert),
stat = "count") +
geom_line(aes(y = y))
# Histogram
niveau.ts %>%
ggplot() +
geom_histogram(mapping = aes(Wert),
stat = "count") +
labs(title = "Water Levels Frequencies",
x = "Value",
y = "Frequency")
# Histogram
niveau.ts %>%
ggplot() +
geom_histogram(mapping = aes(Wert),
stat = "count") +
geom_line(aes(y = count))
# Histogram
niveau.ts %>%
ggplot() +
geom_histogram(mapping = aes(Wert),
stat = "count")
labs(title = "Water Levels Frequencies",
x = "Value",
y = "Frequency")
# Read in the data
load(file = here::here("niveau.Rdata"))
library(lubridate)
library(tibble)
library(tsibble)
library(fpp3)
# Convert column 8 into date type
niveau <- niveau %>%
mutate(Zeitpunkt_des_Auftretens = as_datetime(Zeitpunkt_des_Auftretens))
#niveau$Zeitpunkt_des_Auftretens[1]
# Transform into tibble
niveau.ts <- niveau %>%
as_tsibble(index = Zeitpunkt_des_Auftretens,
key = Zeitstempel)
# Plot the time series
niveau.ts %>%
ggplot() +
geom_line(mapping = aes(x = Zeitpunkt_des_Auftretens,
y = Wert)) +
labs(title = "Time Series: Water Levels",
x = "Time of Occurrence",
y = "Value") +
geom_hline(yintercept=328.4, linetype="dashed", color = "red")
# Histogram
niveau.ts %>%
ggplot() +
geom_histogram(mapping = aes(Wert),
stat = "count") +
geom_density(mapping = aes(Wert), stat = "density", colour="red") +
labs(title = "Water Levels Frequencies",
x = "Value",
y = "Frequency")
summary(niveau.ts$Wert)
# Histogram
niveau.ts %>%
ggplot() +
geom_histogram(mapping = aes(Wert),
stat = "count") +
geom_density(mapping = aes(Wert), stat = "density", colour = "red") + # smoothed version of the histogram
labs(title = "Water Levels Frequencies",
x = "Value",
y = "Frequency")
summary(niveau.ts$Wert)
329.3-325.4
# Histogram
niveau.ts %>%
ggplot() +
geom_histogram(mapping = aes(Wert),
stat = "count") +
geom_density(mapping = aes(Wert), stat = "density", colour = "red") + # smoothed version of the histogram
labs(title = "Water Levels Frequencies",
x = "Value",
y = "Frequency")
# Histogram
niveau.ts %>%
ggplot() +
geom_histogram(mapping = aes(Wert),
stat = "count") +
# Adds smoothed line
geom_density(mapping = aes(Wert), stat = "density", colour = "red") + # smoothed version of the histogram
# Adds the mean on the plot
geom_vline(aes(xintercept = mean(Wert)),
col = 'red',
size = 2) +
# Add text for mean
annotate("text",
x = mean(Wert) * 1.7,
y = mean(Wert) * 1.7,
label = paste("Mean =", mean(x)),
col = "red",
size = 8) +
labs(title = "Water Levels Frequencies",
x = "Value",
y = "Frequency")
# Histogram
niveau.ts %>%
ggplot() +
geom_histogram(mapping = aes(Wert),
stat = "count") +
# Adds smoothed version of the histogram
geom_density(mapping = aes(Wert), stat = "density", colour = "red") +
# Adds the mean on the plot
geom_vline(aes(xintercept = mean(Wert)),
col = 'red',
size = 2) +
# Add text for mean
annotate("text",
x = mean(Wert) * 1.7,
y = mean(Wert) * 1.7,
label = paste("Mean =", mean(Wert)),
col = "red",
size = 8) +
labs(title = "Water Levels Frequencies",
x = "Value",
y = "Frequency")
niveau.ts %>%
ggplot() +
geom_histogram(mapping = aes(Wert),
stat = "count")
niveau.ts %>%
ggplot() +
geom_histogram(mapping = aes(Wert),
stat = "count") +
# Adds smoothed version of the histogram
geom_density(mapping = aes(Wert), stat = "density", colour = "red")
niveau.ts %>%
ggplot() +
geom_histogram(mapping = aes(Wert),
stat = "count") +
# Adds smoothed version of the histogram
geom_density(mapping = aes(Wert), stat = "density", colour = "red") +
# Adds the mean on the plot
geom_vline(aes(xintercept = mean(Wert)),
col = 'red',
size = 2)
niveau.ts %>%
ggplot() +
geom_histogram(mapping = aes(Wert),
stat = "count") +
# Adds smoothed version of the histogram
geom_density(mapping = aes(Wert), stat = "density", colour = "red") +
# Adds the mean on the plot
geom_vline(aes(xintercept = mean(Wert)),
col = 'red',
size = 1) +
# Add text for mean
annotate("text",
x = mean(Wert) * 1.7,
y = mean(Wert) * 1.7,
label = paste("Mean =", mean(Wert)),
col = "red",
size = 8)
ggplot() +
geom_histogram(mapping = aes(Wert),
stat = "count") +
# Adds smoothed version of the histogram
geom_density(mapping = aes(Wert), stat = "density", colour = "red") +
# Adds the mean on the plot
geom_vline(aes(xintercept = mean(Wert)),
col = 'red',
size = 1) +
# Add text for mean
annotate("text",
label = paste("Mean =", mean(Wert)),
col = "red",
size = 8)
# Histogram
niveau.ts %>%
ggplot() +
geom_histogram(mapping = aes(Wert),
stat = "count") +
# Adds smoothed version of the histogram
geom_density(mapping = aes(Wert), stat = "density", colour = "red") +
# Adds the mean on the plot
geom_vline(aes(xintercept = mean(Wert)),
col = 'red',
size = 1) +
labs(title = "Water Levels Frequencies",
x = "Value",
y = "Frequency")
# Histogram
niveau.ts %>%
ggplot() +
geom_histogram(mapping = aes(Wert),
stat = "count") +
# Adds smoothed version of the histogram
geom_density(mapping = aes(Wert), stat = "density", colour = "red") +
labs(title = "Water Levels Frequencies",
x = "Value",
y = "Frequency")
# Histogram
niveau.ts %>%
ggplot() +
geom_histogram(mapping = aes(Wert),
stat = "count") +
# Adds smoothed version of the histogram
geom_density(mapping = aes(Wert), stat = "density", colour = "red") +
# Adds the mode
geom_vline(xintercept = mode(Wert),
col = "blue",
lwd = 1) +
# Adds the mean
geom_vline(xintercept = mean(Wert),
col = "green",
lwd = 1) +
# Adds the median
geom_vline(xintercept = median(Wert),
col = "purple",
lwd = 1) +
labs(title = "Water Levels Frequencies",
x = "Value",
y = "Frequency")
# Histogram
niveau.ts %>%
ggplot() +
geom_histogram(mapping = aes(Wert),
stat = "count") +
# Adds smoothed version of the histogram
geom_density(mapping = aes(Wert), stat = "density", colour = "red") +
# Adds the mode
geom_vline(xintercept = mode(niveau.ts$Wert),
col = "blue",
lwd = 1) +
# Adds the mean
geom_vline(xintercept = mean(niveau.ts$Wert),
col = "green",
lwd = 1) +
# Adds the median
geom_vline(xintercept = median(niveau.ts$Wert),
col = "purple",
lwd = 1) +
labs(title = "Water Levels Frequencies",
x = "Value",
y = "Frequency")
mode(niveau.ts$Wert)
mean(niveau.ts$Wert)
niveau.ts %>%
ggplot() +
geom_histogram(mapping = aes(Wert),
stat = "count") +
# Adds smoothed version of the histogram
geom_density(mapping = aes(Wert), stat = "density", colour = "red") +
# Adds the mode
geom_vline(xintercept = mode(niveau.ts$Wert),
col = "blue",
lwd = 1)
# Histogram
niveau.ts %>%
ggplot() +
geom_histogram(mapping = aes(Wert),
stat = "count") +
# Adds smoothed version of the histogram
geom_density(mapping = aes(Wert), stat = "density", colour = "red") +
# Adds the mode
#geom_vline(xintercept = mode(niveau.ts$Wert),
#col = "blue",
#lwd = 1) +
# Adds the mean
geom_vline(xintercept = mean(niveau.ts$Wert),
col = "green",
lwd = 1) +
# Adds the median
geom_vline(xintercept = median(niveau.ts$Wert),
col = "purple",
lwd = 1) +
labs(title = "Water Levels Frequencies",
x = "Value",
y = "Frequency")
summary(niveau.ts$Zeitpunkt_des_Auftretens)
